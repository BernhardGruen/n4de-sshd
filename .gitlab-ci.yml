variables:
  DOCKER_VERSION: "18.09.9"
  ALPINE_VERSION: "3.11"
  REVISION: "r0"

stages:
  - docker
  - docker-tag
  
docker-sshd:
  stage: docker
  image: docker:${DOCKER_VERSION}
  script:
    - echo "$CI_JOB_TOKEN" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin # An GitLab-Registry anmelden
    - docker build
      --pull
      --build-arg ALPINE_VERSION="${ALPINE_VERSION}"
      -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
      .                                                           # Docker Image bauen
    - docker push $CI_REGISTRY_IMAGE                              # Image in GitLab-Docker-Registry pushen
    - docker image rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

docker-tag-latest:
  stage: docker-tag
  image: docker:${DOCKER_VERSION}
  script:
    - echo "$CI_JOB_TOKEN" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:${ALPINE_VERSION}-${REVISION}
    - docker push $CI_REGISTRY_IMAGE
    - docker image rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker image rm $CI_REGISTRY_IMAGE:${ALPINE_VERSION}-${REVISION}
    - docker image rm $CI_REGISTRY_IMAGE:latest
  only:
    - master